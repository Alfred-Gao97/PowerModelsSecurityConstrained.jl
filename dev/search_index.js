var documenterSearchIndex = {"docs":
[{"location":"components/#PowerModelsSecurityConstrained-Algorithmic-Components-1","page":"Components","title":"PowerModelsSecurityConstrained Algorithmic Components","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"CurrentModule = PowerModelsSecurityConstrained","category":"page"},{"location":"components/#Data-Wangling-1","page":"Components","title":"Data Wangling","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"These tools are used for parsing data files and translating data into the PowerModels internal data model.","category":"page"},{"location":"components/#","page":"Components","title":"Components","text":"parse_goc_files\nbuild_pm_model","category":"page"},{"location":"components/#OPF-Formulations-1","page":"Components","title":"OPF Formulations","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"These are standard OPF formulations (i.e. without contingency constraints) and are used as sub-processes in building contingency constrained solutions.","category":"page"},{"location":"components/#","page":"Components","title":"Components","text":"run_opf_shunt\nrun_opf_cheap\nrun_opf_cheap_dc\nrun_opf_pg_pf_rect_5","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.run_opf_pg_pf_rect_5","page":"Components","title":"PowerModelsSecurityConstrained.run_opf_pg_pf_rect_5","text":"\n\n\n\n","category":"function"},{"location":"components/#Contingency-Filters-1","page":"Components","title":"Contingency Filters","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"These are tools for checking for constraint violations in contingencies","category":"page"},{"location":"components/#","page":"Components","title":"Components","text":"check_contingencies_branch_flow_ratec_nd_first_lazy","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.check_contingencies_branch_flow_ratec_nd_first_lazy","page":"Components","title":"PowerModelsSecurityConstrained.check_contingencies_branch_flow_ratec_nd_first_lazy","text":"given a network, checks the operating point against the contingencies to look for violations\n\n\n\n\n\n","category":"function"},{"location":"components/#SCOPF-Formulations-1","page":"Components","title":"SCOPF Formulations","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"These are contingency constrained OPF formulations.","category":"page"},{"location":"components/#","page":"Components","title":"Components","text":"run_scopf_cuts_dc_soft_2","category":"page"},{"location":"components/#PowerModelsSecurityConstrained.run_scopf_cuts_dc_soft_2","page":"Components","title":"PowerModelsSecurityConstrained.run_scopf_cuts_dc_soft_2","text":"Simple DC SCOPF with flow cuts\n\n\n\n\n\n","category":"function"},{"location":"components/#Second-Stage-Solvers-1","page":"Components","title":"Second-Stage Solvers","text":"","category":"section"},{"location":"components/#","page":"Components","title":"Components","text":"These are solvers for quickly solving large collections of contingencies. These solvers are usually more detailed on than the models used in the contingency filters.","category":"page"},{"location":"components/#","page":"Components","title":"Components","text":"run_fixpoint_pf_v2_3!\nrun_fixpoint_pf_soft!","category":"page"},{"location":"#PowerModelsSecurityConstrained-Documentation-1","page":"Home","title":"PowerModelsSecurityConstrained Documentation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = PowerModelsSecurityConstrained","category":"page"},{"location":"#Overview-1","page":"Home","title":"Overview","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This package provides an extension to PowerModels for Security-Constrained Optimization problems.  The original implementation developed an SCOPF solver that was used as the benchmark algorithm for ARPA-e's grid optimization competition challenge 1 in October 2019.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The latest stable release of PowerModelsSecurityConstrained can be installed using the Julia package manager with","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add PowerModelsSecurityConstrained","category":"page"},{"location":"#","page":"Home","title":"Home","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add PowerModelsSecurityConstrained#master","category":"page"},{"location":"#","page":"Home","title":"Home","text":"At least one solver is required for running PowerModelsSecurityConstrained.  The open-source solver Ipopt is recommended, as it is fast, scalable and can be used to solve a wide variety of the problems and network formulations provided in PowerModels.  The Ipopt solver can be installed via the package manager with","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] add Ipopt","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Test that the package works by running","category":"page"},{"location":"#","page":"Home","title":"Home","text":"] test PowerModelsSecurityConstrained","category":"page"},{"location":"#ARPA-e-SCOPF-Benchmark-1","page":"Home","title":"ARPA-e SCOPF Benchmark","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"PowerModelsSecurityConstrained includes a variety of tools for solving problems with contingency constraints.  The src/script directory includes the specific algorithm that was submitted to the final event in ARPA-e's grid optimization competition challenge 1 in October 2019.","category":"page"}]
}
